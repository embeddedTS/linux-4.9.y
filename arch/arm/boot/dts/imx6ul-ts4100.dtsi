/*
 * Copyright 2018 Technologic Systems
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License
 *     version 2 as published by the Free Software Foundation.
 *
 *     This file is distributed in the hope that it will be useful
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED , WITHOUT WARRANTY OF ANY KIND
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

#include <dt-bindings/input/input.h>
#include "imx6ul.dtsi"

/ {
	aliases {
		gpio5 = &gpio6; /* Map FPGA gpio expander to gpiochip5 */
	};

	chosen {
		stdout-path = &uart1;
	};

	memory {
		/* Base 512 MB can be updated from U-Boot */
		reg = <0x80000000 0x20000000>;
	};

	leds {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_leds>;
		compatible = "gpio-leds";

		/* NOTE: The physical LEDs are on the baseboard, it may be
		 * possible in the future that these will move from this global
		 * dtsi to specific implementation dts files.
		 */
		green-led {
			label = "green-led";
			gpios = <&gpio6 27 GPIO_ACTIVE_LOW>;
			default-state = "on";
		};

		red-led {
			label = "red-led";
			gpios = <&gpio6 28 GPIO_ACTIVE_LOW>;
			default-state = "off";
		};

               /* The following are meant to be userspace controlled IO. The
		* kernel does not allow setting default state of GPIO, but
		* the default state of LEDs can be set, which is why the LED
		* subsystem is used.
		*/
		en-emmc {
			label = "en-emmc";
			gpios = <&gpio5 2 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		linux,cma {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x14000000>;
			linux,cma-default;
		};
	};

	aliases {
		ethernet0 = &fec2;
		ethernet1 = &fec1;
	};

	pxp_v4l2 {
		compatible = "fsl,imx6ul-pxp-v4l2", "fsl,imx6sx-pxp-v4l2", "fsl,imx6sl-pxp-v4l2";
		status = "disabled";
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_gpio_dvfs: regulator-gpio@0 {
			compatible = "regulator-gpio";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_dvfs>;
			regulator-min-microvolt = <1300000>;
			regulator-max-microvolt = <1400000>;
			regulator-name = "gpio_dvfs";
			regulator-type = "voltage";
			gpios = <&gpio5 3 GPIO_ACTIVE_HIGH>;
			states = <1300000 0x1 1400000 0x0>;
		};

		reg_usb_otg1_vbus: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_usb_otg1>;
			regulator-name = "usb_otg1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio1 4 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_sd1_vmmc: sd1_vmmc {
			compatible = "regulator-fixed";
			regulator-name = "SD1_SPWR";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			enable-gpio = <&gpio5 9 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

	       vref_vdd_adc_3v3: adc@0 {
			      compatible = "regulator-fixed";
			      regulator-name = "vref_vdd_adc";
			      regulator-min-microvolt = <3300000>;
			      regulator-max-microvolt = <3300000>;
			      regulator-boot-on;
			      regulator-always-on;
	        };

	};
};

&cpu0 {
	arm-supply = <&reg_arm>;
	soc-supply = <&reg_soc>;
	dc-supply = <&reg_gpio_dvfs>;
};

&ecspi3 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 12 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi3>;
	status = "okay";

	spidevfpga: spi@0 {
		compatible = "spidev";
		reg = <0>;
		spi-max-frequency = <1000000>;
	};
};

&ecspi4 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 9 GPIO_ACTIVE_HIGH>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi4>;
	status = "okay";

	wilc_spi@0 {
		compatible = "microchip,wilc3000";
		reg = <0>;
		spi-max-frequency = <48000000>;
		reset-gpios = <&gpio4 16 GPIO_ACTIVE_HIGH>;	/* RESET */
		chip-en-gpios = <&gpio1 19 GPIO_ACTIVE_HIGH>;	/* ENABLE */
		irq-gpios = <&gpio5 8 GPIO_ACTIVE_HIGH>;	/* IRQ */
		status = "okay";
    };
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	phy-mode = "rmii";
	phy-handle = <&ethphy0>;
	status = "okay";
};

&fec2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2>;
	phy-mode = "rmii";
	phy-handle = <&ethphy1>;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@2 {
			clocks = <&clks IMX6UL_CLK_ENET_REF>;
			clock-names = "rmii-ref";
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <2>;
		};

		ethphy1: ethernet-phy@1 {
			clocks = <&clks IMX6UL_CLK_ENET2_REF>;
			clock-names = "rmii-ref";
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <1>;
		};
	};
};

&adc1  {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_adc1>;
	vref-vdd-supply = <&vref_vdd_adc_3v3>;
	status = "okay";
};

&can1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	status = "okay";
};

&can2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2>;
	status = "okay";
};

&gpc {
	fsl,cpu_pupscr_sw2iso = <0x1>;
	fsl,cpu_pupscr_sw = <0x0>;
	fsl,cpu_pdnscr_iso2sw = <0x1>;
	fsl,cpu_pdnscr_iso = <0x1>;
	fsl,ldo-bypass = <0>; /* DCDC, ldo-enable */
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};

&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	status = "disabled";
};

&pwm5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm5>;
	status = "okay";
};

&pwm6 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm6>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&uart3 {
	/* BT, requires CTS/RTS */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	status = "okay";
	fsl,uart-has-rtscts;
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	status = "okay";
};

&uart7 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart7>;
	status = "okay";
};

&usbotg1 {
	vbus-supply = <&reg_usb_otg1_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb_otg1_id>;
	srp-disable;
	hnp-disable;
	adp-disable;
	status = "okay";
};

&usbotg2 {
	dr_mode = "host";
	disable-over-current;
	status = "okay";
};

&usdhc1 {
	/* keep-power-in-suspend has been found to not have any significant
	 * reduction in power
	 */
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	max-frequency = <208000000>;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	disable-wp;
	cap-sd-highspeed;
	sd-uhs-sdr12;
	sd-uhs-sdr25;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	sd-uhs-ddr50;
	broken-cd = <1>;
	bus-width = <4>;
	vmmc-supply = <&reg_sd1_vmmc>;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2>;
	no-1-8-v;
	disable-wp;
	broken-cd = <1>;
	enable-sdio-wakeup;
	bus-width = <4>;
	status = "okay";
};

&i2c1 {
	compatible = "i2c-gpio";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1_gpio>;
	gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>, /* sda */
		<&gpio1 2 GPIO_ACTIVE_HIGH>; /* scl */
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	silabs: silabs@4a {
		compatible = "ts-wdt";
		reg = <0x4a>;
	};
};

&i2c3 {
	clock-frequency = <400000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c3>;
	pinctrl-1 = <&pinctrl_i2c3_gpio>;
	status = "okay";
	gpios = <&gpio3 5 GPIO_ACTIVE_HIGH>, /* sda */
		<&gpio3 6 GPIO_ACTIVE_HIGH>; /* scl */

	/* FPGA emulates register access like an eeprom */
	at24@29 {
		compatible = "at,24c512";
		reg = <0x29>;
	};

	/* This may need to be reworked here */
	gpio6: gpio@28 {
		compatible = "technologic,ts4900-gpio";
		reg = <0x28>;
		#gpio-cells = <2>;
		gpio-controller;
		base = <160>;
		ngpios = <128>;
	};
};

&snvs_rtc {
	status = "okay";
};

&snvs_poweroff {
	status = "okay";
};

&wdog1 {
	status = "disabled";
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&ts4100_pinctrl_hog>;
	imx6ul-ts4100 {
		/* NOTE: All of the hogged pins below are the common rule.
		 * Exceptions for them are listed in their respective baseboard
		 * DTS.
		 *
		 * Most IO pins default to GPIO, however they are set up with
		 * keepers rather than a sane pull.  Because of that, we have to
		 * list them all here so they are set up in a known state.
		 * It is then up to individual DTS files to call out the pinctrl
		 * needed for pins that could have different states.
		 */
		/* All GPIO should be 0x1b020 unless special
		 * 0x1b020 == Hyst., 100k PU, 50 mA drive
		 * 0x1a020 == no pull resistor
		 * 0x13020 == 100k PD
		 */
		ts4100_pinctrl_hog: hoggrp {
			fsl,pins = <
				/* EN_SD_POWER, special setting*/
				MX6UL_PAD_SNVS_TAMPER9__GPIO5_IO09	0x17059
				/* SD1 VSELECT, special setting */
				MX6UL_PAD_GPIO1_IO05__USDHC1_VSELECT	0x17059
				/* POWER_FAIL */
				MX6UL_PAD_SNVS_TAMPER0__GPIO5_IO00	0x13020
				/* FPGA_IRQ */
				MX6UL_PAD_SNVS_TAMPER1__GPIO5_IO01	0x13020
				/* FPGA_RESET# */
				MX6UL_PAD_NAND_WP_B__GPIO4_IO11		0x1b020
				/* JTAG_FPGA_TDO */
				MX6UL_PAD_SNVS_TAMPER4__GPIO5_IO04	0x1b020
				/* JTAG_FPGA_TDI */
				MX6UL_PAD_SNVS_TAMPER5__GPIO5_IO05	0x1b020
				/* JTAG_FPGA_TMS */
				MX6UL_PAD_SNVS_TAMPER6__GPIO5_IO06	0x1b020
				/* JTAG_FPGA_TCK */
				MX6UL_PAD_SNVS_TAMPER7__GPIO5_IO07	0x1b020
				/* SPARE_1 */
				MX6UL_PAD_UART1_CTS_B__GPIO1_IO18	0x1b020
				/* SPARE_2 */
				MX6UL_PAD_UART1_RTS_B__GPIO1_IO19	0x1b020
				/* SPARE_3 */
				MX6UL_PAD_NAND_DQS__GPIO4_IO16		0x1b020
			>;
		};

		pinctrl_cam_gpio: cameragpio {
			fsl,pins = <
				/* Camera interface pins */
				MX6UL_PAD_CSI_DATA00__GPIO4_IO21	0x1b020
				MX6UL_PAD_CSI_DATA01__GPIO4_IO22	0x1b020
				MX6UL_PAD_CSI_DATA02__GPIO4_IO23	0x1b020
				MX6UL_PAD_CSI_DATA03__GPIO4_IO24	0x1b020
				MX6UL_PAD_CSI_DATA04__GPIO4_IO25	0x1b020
				MX6UL_PAD_CSI_DATA05__GPIO4_IO26	0x1b020
				MX6UL_PAD_CSI_DATA06__GPIO4_IO27	0x1b020
				MX6UL_PAD_CSI_DATA07__GPIO4_IO28	0x1b020
				MX6UL_PAD_CSI_HSYNC__GPIO4_IO20		0x1b020
				MX6UL_PAD_CSI_MCLK__GPIO4_IO17		0x1b020
				MX6UL_PAD_CSI_PIXCLK__GPIO4_IO18	0x1b020
				MX6UL_PAD_CSI_VSYNC__GPIO4_IO19		0x1b020
			>;
		};

		pinctrl_lcd_gpio: lcdgpio {
			fsl,pins = <
				/* LCD Interface pins */
				MX6UL_PAD_LCD_DATA02__GPIO3_IO07	0x1b020
				MX6UL_PAD_LCD_DATA03__GPIO3_IO08	0x1b020
				MX6UL_PAD_LCD_DATA04__GPIO3_IO09	0x1b020
				MX6UL_PAD_LCD_DATA05__GPIO3_IO10	0x1b020
				MX6UL_PAD_LCD_DATA06__GPIO3_IO11	0x1b020
				MX6UL_PAD_LCD_DATA07__GPIO3_IO12	0x1b020
				MX6UL_PAD_LCD_DATA10__GPIO3_IO15	0x1b020
				MX6UL_PAD_LCD_DATA11__GPIO3_IO16	0x1b020
				MX6UL_PAD_LCD_DATA12__GPIO3_IO17	0x1b020
				MX6UL_PAD_LCD_DATA13__GPIO3_IO18	0x1b020
				MX6UL_PAD_LCD_DATA14__GPIO3_IO19	0x1b020
				MX6UL_PAD_LCD_DATA15__GPIO3_IO20	0x1b020
				MX6UL_PAD_LCD_DATA20__GPIO3_IO25	0x1b020
				MX6UL_PAD_LCD_DATA21__GPIO3_IO26	0x1b020
				MX6UL_PAD_LCD_DATA22__GPIO3_IO27	0x1b020
				MX6UL_PAD_LCD_DATA23__GPIO3_IO28	0x1b020
				MX6UL_PAD_LCD_CLK__GPIO3_IO00		0x1b020
				MX6UL_PAD_LCD_ENABLE__GPIO3_IO01	0x1b020
				MX6UL_PAD_LCD_HSYNC__GPIO3_IO02		0x1b020
				MX6UL_PAD_LCD_VSYNC__GPIO3_IO03		0x1b020
			>;
		};

		pinctrl_gpio_leds: gpioledgrp {
			fsl,pins = <
				/* eMMC En. */
				MX6UL_PAD_SNVS_TAMPER2__GPIO5_IO02   0x1b020
			>;
		};

		pinctrl_adc1: adc1grp{
			fsl,pins = <
                                 MX6UL_PAD_GPIO1_IO01__GPIO1_IO01    0x1a020
                                 MX6UL_PAD_GPIO1_IO09__GPIO1_IO09    0x1a020
			>;
	        };

		pinctrl_usb_otg1_id: usbotg1idgrp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO00__ANATOP_OTG1_ID	0x17059
			>;
		};

		pinctrl_usb_otg1: usbotg1grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO04__GPIO1_IO04        0x10b0
			>;
		};

		pinctrl_flexcan1: flexcan1grp{
			fsl,pins = <
				MX6UL_PAD_LCD_DATA08__FLEXCAN1_TX	0x1b020
				MX6UL_PAD_LCD_DATA09__FLEXCAN1_RX	0x1b020
			>;
		};

		pinctrl_flexcan2: flexcan2grp{
			fsl,pins = <
				MX6UL_PAD_UART2_RTS_B__FLEXCAN2_RX	0x1b020
				MX6UL_PAD_UART2_CTS_B__FLEXCAN2_TX	0x1b020
			>;
		};

		pinctrl_pwm1: ts4100pwm1 {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO08__PWM1_OUT  0x13020
			>;
		};
                /*  adc1 is currently using IO09,to use pwm2 remove IO09 from the ADC
		 *  definition and set pwm2 peripheral to "okay
		 */
		pinctrl_pwm2: ts4100pwm2 {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO09__PWM2_OUT  0x13020
			>;
		};

		pinctrl_pwm5: ts4100pwm5 {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA18__PWM5_OUT  0x13020
			>;
		};

		pinctrl_pwm6: ts4100pwm6 {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA19__PWM6_OUT  0x13020
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6UL_PAD_UART1_TX_DATA__UART1_DCE_TX 0x1b0b1
				MX6UL_PAD_UART1_RX_DATA__UART1_DCE_RX 0x1b0b1
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX6UL_PAD_UART2_TX_DATA__UART2_DCE_TX	0x1b0b1
				MX6UL_PAD_UART2_RX_DATA__UART2_DCE_RX	0x1b0b1
			>;
		};

		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX6UL_PAD_UART3_RX_DATA__UART3_DCE_RX	0x1b0b1
				MX6UL_PAD_UART3_TX_DATA__UART3_DCE_TX	0x1b0b1
				MX6UL_PAD_UART3_CTS_B__UART3_DCE_CTS	0x1b0b1
				MX6UL_PAD_UART3_RTS_B__UART3_DCE_RTS	0x1b0b1
			>;
		};

		pinctrl_uart4: uart4grp {
			fsl,pins = <
				MX6UL_PAD_UART4_RX_DATA__UART4_DCE_RX	0x1b0b1
				MX6UL_PAD_UART4_TX_DATA__UART4_DCE_TX	0x1b0b1
			>;
		};

		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX6UL_PAD_UART5_RX_DATA__UART5_DCE_RX	0x1b0b1
				MX6UL_PAD_UART5_TX_DATA__UART5_DCE_TX	0x1b0b1
			>;
		};

		pinctrl_uart7: uart7grp {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA17__UART7_DCE_RX	0x1b0b1
				MX6UL_PAD_LCD_DATA16__UART7_DCE_TX	0x1b0b1
			>;
		};

		pinctrl_sai2: sai2grp {
			fsl,pins = <
				MX6UL_PAD_JTAG_TDI__SAI2_TX_BCLK	0x17088
				MX6UL_PAD_JTAG_TDO__SAI2_TX_SYNC	0x17088
				MX6UL_PAD_JTAG_TRST_B__SAI2_TX_DATA	0x11088
				MX6UL_PAD_JTAG_TCK__SAI2_RX_DATA	0x11088
				MX6UL_PAD_JTAG_TMS__SAI2_MCLK		0x17088
			>;
		};

		pinctrl_enet1: enet1grp {
			fsl,pins = <
				MX6UL_PAD_ENET1_RX_EN__ENET1_RX_EN	0x1b0b0
				MX6UL_PAD_ENET1_RX_ER__ENET1_RX_ER	0x1b0b0
				MX6UL_PAD_ENET1_RX_DATA0__ENET1_RDATA00	0x1b0b0
				MX6UL_PAD_ENET1_RX_DATA1__ENET1_RDATA01	0x1b0b0
				MX6UL_PAD_ENET1_TX_EN__ENET1_TX_EN	0x1b0b0
				MX6UL_PAD_ENET1_TX_DATA0__ENET1_TDATA00	0x1b0b0
				MX6UL_PAD_ENET1_TX_DATA1__ENET1_TDATA01	0x1b0b0
				MX6UL_PAD_ENET1_TX_CLK__ENET1_REF_CLK1 0x4001b031
			>;
		};

		pinctrl_enet2: enet2grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO07__ENET2_MDC		0x1b0b0
				MX6UL_PAD_GPIO1_IO06__ENET2_MDIO	0x1b0b0
				MX6UL_PAD_JTAG_MOD__GPIO1_IO10		0x1f0b0
				MX6UL_PAD_ENET2_RX_EN__ENET2_RX_EN	0x1b0b0
				MX6UL_PAD_ENET2_RX_ER__ENET2_RX_ER	0x1b0b0
				MX6UL_PAD_ENET2_RX_DATA0__ENET2_RDATA00	0x1b0b0
				MX6UL_PAD_ENET2_RX_DATA1__ENET2_RDATA01	0x1b0b0
				MX6UL_PAD_ENET2_TX_EN__ENET2_TX_EN	0x1b0b0
				MX6UL_PAD_ENET2_TX_DATA0__ENET2_TDATA00	0x1b0b0
				MX6UL_PAD_ENET2_TX_DATA1__ENET2_TDATA01	0x1b0b0
				MX6UL_PAD_ENET2_TX_CLK__ENET2_REF_CLK2 0x4001b031
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX6UL_PAD_LCD_RESET__WDOG1_WDOG_ANY    0x30b0
			>;
		};

		pinctrl_i2c1_gpio: i2c1grpgpio {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO02__GPIO1_IO02 0x4001b8b0
				MX6UL_PAD_GPIO1_IO03__GPIO1_IO03 0x4001b8b0
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA01__I2C3_SCL 0x4001b8b0
				MX6UL_PAD_LCD_DATA00__I2C3_SDA 0x4001b8b0
			>;
		};

		pinctrl_i2c3_gpio: i2c3grpgpio {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA01__GPIO3_IO06 0x4001b8b0
				MX6UL_PAD_LCD_DATA00__GPIO3_IO05 0x4001b8b0
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD        0x17059
				MX6UL_PAD_SD1_CLK__USDHC1_CLK        0x10071
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0    0x17059
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1    0x17059
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2    0x17059
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3    0x17059
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD     0x170b9
				MX6UL_PAD_SD1_CLK__USDHC1_CLK     0x100b9
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0 0x170b9
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1 0x170b9
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2 0x170b9
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3 0x170b9
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD     0x170f9
				MX6UL_PAD_SD1_CLK__USDHC1_CLK     0x100f9
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0 0x170f9
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1 0x170f9
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2 0x170f9
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3 0x170f9
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX6UL_PAD_NAND_RE_B__USDHC2_CLK     0x10069
				MX6UL_PAD_NAND_WE_B__USDHC2_CMD     0x17059
				MX6UL_PAD_NAND_DATA00__USDHC2_DATA0 0x17059
				MX6UL_PAD_NAND_DATA01__USDHC2_DATA1 0x17059
				MX6UL_PAD_NAND_DATA02__USDHC2_DATA2 0x17059
				MX6UL_PAD_NAND_DATA03__USDHC2_DATA3 0x17059
			>;
		};

		pinctrl_ecspi3: ecspi3grp {
			fsl,pins = <
				/* SPI_3_FPGA_CS# */
				MX6UL_PAD_NAND_READY_B__GPIO4_IO12  0x10b0 
				MX6UL_PAD_NAND_CE0_B__ECSPI3_SCLK   0x10b0
				MX6UL_PAD_NAND_CE1_B__ECSPI3_MOSI   0x10b0
				MX6UL_PAD_NAND_CLE__ECSPI3_MISO     0x10b0
				/* SPI_3_OFF_BD_CS# */
				MX6UL_PAD_NAND_ALE__GPIO4_IO10      0x10b0 
			>;
		};

		pinctrl_ecspi4: ecspi4grp {
			fsl,pins = <
				MX6UL_PAD_NAND_DATA04__ECSPI4_SCLK  0x10b0
				MX6UL_PAD_NAND_DATA05__ECSPI4_MOSI  0x10b0
				MX6UL_PAD_NAND_DATA06__ECSPI4_MISO  0x10b0
				/* WIFI chip select */
				MX6UL_PAD_NAND_DATA07__GPIO4_IO09   0x10b0  
				/* SPARE_4/WIFI_IRQ */
				MX6UL_PAD_SNVS_TAMPER8__GPIO5_IO08  0x1b020 
			>;
		};

		pinctrl_dvfs: dvfsgrp {
			fsl,pins = <
				MX6UL_PAD_SNVS_TAMPER3__GPIO5_IO03	0x79
			>;
		};
	};
};
