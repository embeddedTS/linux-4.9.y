/*
 * Copyright (C) 2020 Technologic Systems
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;
#include <dt-bindings/input/input.h>
#include "imx6ul.dtsi"

/ {
	model = "Technologic Systems i.MX6UL TS-MFlow ";
	compatible = "technologic,tsmflow", "fsl,imx6ul";

	chosen {
		stdout-path = &uart1;
	};

	memory {
		reg = <0x80000000 0x20000000>;
	};

	leds {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_leds>;
		compatible = "gpio-leds";

		green-led {
			label = "green-led";
			gpios = <&gpio1 19 GPIO_ACTIVE_LOW>;
			default-state = "on";
		};

		red-led {
			label = "red-led";
			gpios = <&gpio1 18 GPIO_ACTIVE_LOW>;
			default-state = "off";
		};

		status-led {
			label = "status-led";
			gpios = <&gpio3 17 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		fault-led {
			label = "fault-led";
			gpios = <&gpio3 18 GPIO_ACTIVE_HIGH>;
			default-state = "off";
			/* In the case of kernel panic, attempt to use this LED
			 * to flash and indicate status, requires
			 * CONFIG_LEDS_TRIGGER_PANIC  */
			/* panic-indicator; */
		};

		rs485-led {
			label = "rs485-led";
			gpios = <&gpio3 19 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		eth_spd-led {
			label = "eth_spd-led";
			gpios = <&gpio3 20 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		/* The following are meant to be userspace controlled IO. The
		 * kernel does not allow setting default state of GPIO, but
		 * the default state of LEDs can be set, which is why the LED
		 * subsystem is used.
		 */
		en-oled-3v3 {
			label = "en-oled-3v3";
			gpios = <&gpio3 8 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		en-usb-5v {
			label = "en-usb-5v";
			gpios = <&gpio3 14 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		en-rf-24v {
			label = "en-rf-24v";
			gpios = <&gpio3 10 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		en-iso485-term {
			label = "en-iso485-term";
			gpios = <&gpio1 31 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		linux,cma {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x14000000>;
			linux,cma-default;
		};
	};

	aliases {
		ethernet0 = &fec2;
		ethernet1 = &fec1;
		i2c1 = &i2c2gpio;
		i2c0 = &i2c1gpio;
	};

	pxp_v4l2 {
		compatible = "fsl,imx6ul-pxp-v4l2", "fsl,imx6sx-pxp-v4l2", "fsl,imx6sl-pxp-v4l2";
		status = "disabled";
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_gpio_dvfs: regulator-gpio {
			compatible = "regulator-gpio";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_dvfs>;
			regulator-min-microvolt = <1300000>;
			regulator-max-microvolt = <1400000>;
			regulator-name = "gpio_dvfs";
			regulator-type = "voltage";
			gpios = <&gpio5 3 GPIO_ACTIVE_HIGH>;
			states = <1300000 0x1 1400000 0x0>;
		};

		reg_sd1_vmmc: sd1_vmmc {
			compatible = "regulator-fixed";
			regulator-name = "SD1_SPWR";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
		};

		reg_enet_3v3: regulator-phy@0 {
			compatible = "regulator-fixed";
			regulator-name = "enet_3v3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
		};
	};

	i2c1gpio: i2c1gpio {
		compatible = "i2c-gpio";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c1_gpio>;
		gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>, /* sda */
			<&gpio1 2 GPIO_ACTIVE_HIGH>; /* scl */
		#address-cells = <1>;
		#size-cells = <0>;

		status = "okay";

		rtc: m41t00s@68 {
			compatible = "m41t00";
			reg = <0x68>;
		};

		silabs: silabs@54 {
			compatible = "technologic,ts7100-wdt";
			/* 5min timeout default, in case of slow userspace.
			 * Set to 0 to disable WDT at startup. Userspace procs
			 * can still start feeding later.
			 */
			timeout-sec = <300>;
			reg = <0x54>;
		};
	};

	i2c2gpio: i2c2gpio {
		compatible = "i2c-gpio";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c2gpio>;
		gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>, /* sda */
			<&gpio1 0 GPIO_ACTIVE_HIGH>; /* scl */
		i2c-gpio,delay-us = <2>; /* 100khz*/
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

	};
};

&cpu0 {
	arm-supply = <&reg_arm>;
	soc-supply = <&reg_soc>;
	dc-supply = <&reg_gpio_dvfs>;
};

&ecspi2 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 22 GPIO_ACTIVE_HIGH>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	status = "disabled";

	spinor: spi@0 {
		compatible = "micron,n25q064", "jedec,spi-nor";
		reg = <0>;
		spi-max-frequency = <108000000>;
		size = <0x800000>;
		address-width = <24>;
		pagesize = <256>;
	};
};

&ecspi3 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 12 GPIO_ACTIVE_HIGH>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi3>;
	status = "okay";

	wilc_spi@0 {
		compatible = "microchip,wilc1000", "microchip,wilc3000";
		reg = <0>;
		spi-max-frequency = <48000000>;
		reset-gpios = <&gpio3 13 GPIO_ACTIVE_HIGH>;
		chip_en-gpios = <&gpio1 14 GPIO_ACTIVE_HIGH>;
		interrupt-parent = <&gpio1>;
		interrupts = <11 GPIO_ACTIVE_HIGH>;

		status = "okay";
	};
};

&ecspi4 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 9 GPIO_ACTIVE_HIGH>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi4>;
	status = "okay";

	/* OLED is on this bus */
	spidevlcd: spi@0 {
		compatible = "spidev";
		reg = <0>;
		spi-max-frequency = <5000000>;
	};

};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	phy-mode = "rmii";
	phy-handle = <&ethphy0>;
	status = "okay";
};

&fec2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2>;
	phy-mode = "rmii";
	phy-handle = <&ethphy1>;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@2 {
			clocks = <&clks IMX6UL_CLK_ENET_REF>;
			clock-names = "rmii-ref";
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <2>;
		};

		ethphy1: ethernet-phy@1 {
			clocks = <&clks IMX6UL_CLK_ENET2_REF>;
			clock-names = "rmii-ref";
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <1>;
		};
	};
};

&gpc {
	fsl,cpu_pupscr_sw2iso = <0x1>;
	fsl,cpu_pupscr_sw = <0x0>;
	fsl,cpu_pdnscr_iso2sw = <0x1>;
	fsl,cpu_pdnscr_iso = <0x1>;
	fsl,ldo-bypass = <0>; /* DCDC, ldo-enable */
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

/* RF */
&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";

	uart-has-rtscts;
};

/* BT */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	status = "okay";
	uart-has-rtscts;
};

/* RS-485 */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	status = "okay";

	uart-has-rtscts;
	rts-gpios = <&gpio1 30 GPIO_ACTIVE_HIGH>;
	dma-names = "", "";
	linux,rs485-enabled-at-boot-time;
};

&usbotg1 {
	dr_mode = "device";
	srp-disable;
	hnp-disable;
	adp-disable;
	status = "okay";
};

&usbotg2 {
	dr_mode = "host";
	disable-over-current;
	status = "okay";
};

/* eMMC */
&usdhc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc1>;
	no-1-8-v;
	disable-wp;
	non-removable;
	bus-width = <4>;
	status = "okay";
};

/* SD */
&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2>;
	no-1-8-v;
	disable-wp;
	broken-cd = <1>;
	bus-width = <4>;
	status = "okay";
};


&snvs_rtc {
	status = "disabled";
};

/* WDT is in the uC, but we need to explicitly disable CPU WDT */
&wdog1 {
       status = "disabled";
};




&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;
	imx6ul-ts7180 {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				/* All GPIO should be 0x1b020 unless special
				 * 0x1b020 == Hyst., 100k PU, 50 mA drive
				 * 0x1a020 == no pull resistor
				 * 0x13020 == 100k PD
				 */
				MX6UL_PAD_JTAG_TDI__GPIO1_IO13       0x1b020
				MX6UL_PAD_JTAG_TDO__GPIO1_IO12       0x1b020
				MX6UL_PAD_JTAG_TRST_B__GPIO1_IO15    0x1b020
				/* DETECT_9471 */
				MX6UL_PAD_NAND_ALE__GPIO4_IO10       0x1b020
				/* POWER_FAIL */
				MX6UL_PAD_SNVS_TAMPER0__GPIO5_IO00   0x1b020
				/* Add silab clk, data, en_prog */
				/* Add strap pins! */

				/* RES_STRAP_0 */
				MX6UL_PAD_LCD_DATA18__GPIO3_IO23     0x1b020
				/* RES_STRAP_1 */
				MX6UL_PAD_LCD_DATA19__GPIO3_IO24     0x1b020
				/* RES_STRAP_2 */
				MX6UL_PAD_LCD_DATA22__GPIO3_IO27     0x1b020
				/* RES_STRAP_3 */
				MX6UL_PAD_LCD_DATA23__GPIO3_IO28     0x1b020
			>;
		};

		pinctrl_gpio_leds: gpioledgrp {
			fsl,pins = <
				/* Red LED */
				MX6UL_PAD_UART1_CTS_B__GPIO1_IO18    0x1b020
				/* Green LED */
				MX6UL_PAD_UART1_RTS_B__GPIO1_IO19    0x1b020
				/* Status LED */
				MX6UL_PAD_LCD_DATA12__GPIO3_IO17     0x1b020
				/* Fault LED */
				MX6UL_PAD_LCD_DATA13__GPIO3_IO18     0x1b020
				/* RS-485 LED */
				MX6UL_PAD_LCD_DATA14__GPIO3_IO19     0x1b020
				/* Eth SPD LED (unused) */
				MX6UL_PAD_LCD_DATA15__GPIO3_IO20     0x1b020

				/* En. OLED 3.3 V */
				MX6UL_PAD_LCD_DATA03__GPIO3_IO08     0x1b020
				/* En. Host USB 5 V (unused) */
				MX6UL_PAD_LCD_DATA09__GPIO3_IO14     0x1b020
				/* En. RF Switched 24 V */
				MX6UL_PAD_LCD_DATA05__GPIO3_IO10     0x1b020
				/* En. ISO485 Termination */
				MX6UL_PAD_UART5_RX_DATA__GPIO1_IO31  0x1b020
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6UL_PAD_UART1_TX_DATA__UART1_DCE_TX 0x1b0b1
				MX6UL_PAD_UART1_RX_DATA__UART1_DCE_RX 0x1b0b1
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX6UL_PAD_UART2_TX_DATA__UART2_DCE_TX	0x1b0b1
				MX6UL_PAD_UART2_RX_DATA__UART2_DCE_RX	0x1b0b1
				MX6UL_PAD_UART2_CTS_B__UART2_DCE_CTS    0x1b0b1
				MX6UL_PAD_UART2_RTS_B__UART2_DCE_RTS    0x1b0b1
			>;
		};

		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX6UL_PAD_UART3_RX_DATA__UART3_DCE_RX	0x1b0b1
				MX6UL_PAD_UART3_TX_DATA__UART3_DCE_TX	0x1b0b1
				MX6UL_PAD_UART3_CTS_B__UART3_DCE_CTS	0x1b0b1
				MX6UL_PAD_UART3_RTS_B__UART3_DCE_RTS	0x1b0b1
			>;
		};

		pinctrl_uart4: uart4grp {
			fsl,pins = <
				MX6UL_PAD_UART4_RX_DATA__UART4_DCE_RX	0x1b0b1
				MX6UL_PAD_UART4_TX_DATA__UART4_DCE_TX	0x1b0b1
				/* TXEN */
				MX6UL_PAD_UART5_TX_DATA__GPIO1_IO30     0x1b0b1
			>;
		};

		pinctrl_enet1: enet1grp {
			fsl,pins = <
				MX6UL_PAD_ENET1_RX_EN__ENET1_RX_EN      0x1b0b0
				MX6UL_PAD_ENET1_RX_ER__ENET1_RX_ER      0x1b0b0
				MX6UL_PAD_ENET1_RX_DATA0__ENET1_RDATA00 0x1b0b0
				MX6UL_PAD_ENET1_RX_DATA1__ENET1_RDATA01 0x1b0b0
				MX6UL_PAD_ENET1_TX_EN__ENET1_TX_EN      0x1b0b0
				MX6UL_PAD_ENET1_TX_DATA0__ENET1_TDATA00 0x1b0b0
				MX6UL_PAD_ENET1_TX_DATA1__ENET1_TDATA01 0x1b0b0
				MX6UL_PAD_ENET1_TX_CLK__ENET1_REF_CLK1 0x4001b031
			>;
		};

		pinctrl_enet2: enet2grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO07__ENET2_MDC         0x1b0b0
				MX6UL_PAD_GPIO1_IO06__ENET2_MDIO        0x1b0b0
				MX6UL_PAD_JTAG_MOD__GPIO1_IO10          0x1f0b0
				MX6UL_PAD_ENET2_RX_EN__ENET2_RX_EN      0x1b0b0
				MX6UL_PAD_ENET2_RX_ER__ENET2_RX_ER      0x1b0b0
				MX6UL_PAD_ENET2_RX_DATA0__ENET2_RDATA00 0x1b0b0
				MX6UL_PAD_ENET2_RX_DATA1__ENET2_RDATA01 0x1b0b0
				MX6UL_PAD_ENET2_TX_EN__ENET2_TX_EN      0x1b0b0
				MX6UL_PAD_ENET2_TX_DATA0__ENET2_TDATA00 0x1b0b0
				MX6UL_PAD_ENET2_TX_DATA1__ENET2_TDATA01 0x1b0b0
				MX6UL_PAD_ENET2_TX_CLK__ENET2_REF_CLK2 0x4001b031
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO02__I2C1_SCL        0x4001a8b0
				MX6UL_PAD_GPIO1_IO03__I2C1_SDA        0x4001a8b0
			>;
		};

		pinctrl_i2c1_gpio: i2c1grpgpio {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO02__GPIO1_IO02      0x4001a8b0
				MX6UL_PAD_GPIO1_IO03__GPIO1_IO03      0x4001a8b0
			>;
		};

		pinctrl_i2c2gpio: i2c2grpgpio {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO00__GPIO1_IO00      0x4001a8b0
				MX6UL_PAD_GPIO1_IO01__GPIO1_IO01      0x4001a8b0
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD        0x17059
				MX6UL_PAD_SD1_CLK__USDHC1_CLK        0x10071
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0    0x17059
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1    0x17059
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2    0x17059
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3    0x17059
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX6UL_PAD_NAND_RE_B__USDHC2_CLK     0x10069
				MX6UL_PAD_NAND_WE_B__USDHC2_CMD     0x17059
				MX6UL_PAD_NAND_DATA00__USDHC2_DATA0 0x17059
				MX6UL_PAD_NAND_DATA01__USDHC2_DATA1 0x17059
				MX6UL_PAD_NAND_DATA02__USDHC2_DATA2 0x17059
				MX6UL_PAD_NAND_DATA03__USDHC2_DATA3 0x17059
			>;
		};

		pinctrl_ecspi2: exspi2grp {
			fsl,pins = <
				MX6UL_PAD_CSI_DATA00__ECSPI2_SCLK  0x1b020
				MX6UL_PAD_CSI_DATA02__ECSPI2_MOSI  0x1b020
				MX6UL_PAD_CSI_DATA03__ECSPI2_MISO  0x1b020

				/* SPI flash CS# */
				MX6UL_PAD_CSI_DATA01__GPIO4_IO22   0x1b020
			>;
		};

		pinctrl_ecspi3: ecspi3grp {
			fsl,pins = <
				MX6UL_PAD_NAND_CE0_B__ECSPI3_SCLK  0x1b020
				MX6UL_PAD_NAND_CE1_B__ECSPI3_MOSI  0x1b020
				MX6UL_PAD_NAND_CLE__ECSPI3_MISO	   0x1b820
				/* WIFI_CS# CS0 */
				MX6UL_PAD_NAND_READY_B__GPIO4_IO12 0x1b020

				/* WIFI_IRQ# */
				MX6UL_PAD_JTAG_TMS__GPIO1_IO11     0x1b020
				/* CHIP_EN (EN_WIFI_PWR) */
				MX6UL_PAD_JTAG_TCK__GPIO1_IO14     0x1b020
				/* WIFI_RESET# */
				MX6UL_PAD_LCD_DATA08__GPIO3_IO13   0x1b020
			>;
		};

		pinctrl_ecspi4: ecspi4grp {
			fsl,pins = <
				MX6UL_PAD_NAND_DATA04__ECSPI4_SCLK  0x1b020
				MX6UL_PAD_NAND_DATA05__ECSPI4_MOSI  0x1b020
				MX6UL_PAD_NAND_DATA06__ECSPI4_MISO  0x1b020

				/* OLED CS# */
				MX6UL_PAD_NAND_DATA07__GPIO4_IO09   0x1b020
			>;
		};

		pinctrl_dvfs: dvfsgrp {
			fsl,pins = <
				MX6UL_PAD_SNVS_TAMPER3__GPIO5_IO03  0x1b0a0
			>;
		};
	};
};
